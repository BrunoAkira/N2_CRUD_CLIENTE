package com.api.termomecanica.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;

import com.api.termomecanica.bean.ClienteBean;

@Component
public class ClienteDAO implements Dao {

	private Connection connection;

	public ClienteDAO() {

		try {
			connection = com.api.termomecanica.utils.ConexaoDB.getConnection();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new ArithmeticException("ClienteDao: DB Connect: " + e.getMessage());
		}
	}

	// receber lista de cliente
	public ClienteBean addCliente(ClienteBean c) throws SQLException {

		try {
			PreparedStatement preparedStatement = connection.prepareStatement(
					"INSERT INTO CLIENTE (NOME, SOBRENOME, EMAIL, CPF, RG, CIDADE, ESTADO) VALUES (?, ?, ? , ?, ?, ?, ?)");
			preparedStatement.setString(1, c.getNome());
			preparedStatement.setString(2, c.getSobrenome());
			preparedStatement.setString(3, c.getEmail());
			preparedStatement.setString(4, c.getCpf());
			preparedStatement.setString(5, c.getRg());
			preparedStatement.setString(6, c.getCidade());
			preparedStatement.setString(7, c.getEstado());
			preparedStatement.executeUpdate();
			
			/*
			 * ResultSet tableKeys = preparedStatement.getGeneratedKeys(); tableKeys.next();
			 * int autoGeneratedID = tableKeys.getInt(1);
			 *///c.setId(autoGeneratedID);
			
			//System.out.println("ID salvo: " + autoGeneratedID);
			
			return c;

		} catch (SQLException e) {
			e.printStackTrace();
			throw new SQLException("ClienteDao: addCliente: " + e.getMessage());
		} catch (Exception e) {
			e.printStackTrace();
			throw new RuntimeException("ClienteDao: addCliente: " + e.getMessage());
		}
	}

	public void deleteCliente(int id) {
		try {

			PreparedStatement preparedStatement = connection.prepareStatement("DELETE FROM CLIENTE WHERE id=?");

			preparedStatement.setInt(1, id);
			preparedStatement.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public void atualizaCliente(ClienteBean c) {
		try {
			PreparedStatement preparedStatement = connection.prepareStatement(
					"UPDATE CLIENTE SET NOME=?, SOBRENOME=?, EMAIL=?, RG=?, CIDADE=?, ESTADO=? WHERE ID=?");

			// Parameters start with 1
			preparedStatement.setString(1, c.getNome());
			preparedStatement.setString(2, c.getSobrenome());
			preparedStatement.setString(3, c.getEmail());
			preparedStatement.setString(4, c.getRg());
			preparedStatement.setString(5, c.getCidade());
			preparedStatement.setString(6, c.getEstado());
			preparedStatement.setInt(7, c.getId());
			
			preparedStatement.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public List<ClienteBean> getAllCliente() {

		List<ClienteBean> lc = new ArrayList<ClienteBean>();

		try {
			Statement statement = connection.createStatement();
			ResultSet rs = statement.executeQuery("SELECT * FROM CLIENTE");
			while (rs.next()) {

				ClienteBean c = new ClienteBean();
				c.setId(rs.getInt("ID"));
				c.setNome(rs.getString("NOME"));
				c.setSobrenome(rs.getString("SOBRENOME"));
				c.setEmail(rs.getString("EMAIL"));
				c.setCpf(rs.getString("CPF"));
				c.setRg(rs.getString("RG"));
				c.setCidade(rs.getString("CIDADE"));
				c.setEstado(rs.getString("ESTADO"));

				lc.add(c);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}

		return lc;
	}

	public ClienteBean getClienteByCpf() {

		ClienteBean c = new ClienteBean();
		try {
			Statement statement = connection.createStatement();
			ResultSet rs = statement.executeQuery("SELECT * FROM CLIENTE WHERE CPF=?");

			c.setNome(rs.getString("NOME"));
			c.setSobrenome(rs.getString("SOBRENOME"));
			c.setEmail(rs.getString("EMAIL"));
			c.setCpf(rs.getString("CPF"));
			c.setRg(rs.getString("RG"));
			c.setCidade(rs.getString("CIDADE"));
			c.setEstado(rs.getString("ESTADO"));

		} catch (SQLException e) {
			e.printStackTrace();
		}

		return c;
	}

}
